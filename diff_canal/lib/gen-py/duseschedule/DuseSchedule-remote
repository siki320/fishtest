#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__))+'/../')
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from duseschedule import DuseSchedule
from duseschedule.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  RespJob GetJob(ScheduleType scheduleType, Trace trace)')
  print('  RespMsg PutJob(ScheduleType scheduleType, PutJobReq req, Trace trace)')
  print('  RespStream GetStream(string sid, i32 cityId, Trace trace)')
  print('  RespMsg AddCityId(string sid, i32 cityId, Trace trace)')
  print('  RespCityIds GetAllCityIds(string sid, GetCityIdsReq req, Trace trace)')
  print('  RespCityIds GetComputedCityIds(ScheduleType scheduleType, GetCityIdsReq req, Trace trace)')
  print('  RespCityIds GetUnComputeCityIds(ScheduleType scheduleType, GetCityIdsReq req, Trace trace)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 8083
uri = ''
framed = True
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = DuseSchedule.Client(protocol)
transport.open()

if cmd == 'GetJob':
  if len(args) != 2:
    print('GetJob requires 2 args')
    sys.exit(1)
  pp.pprint(client.GetJob(eval(args[0]),eval(args[1]),))

elif cmd == 'PutJob':
  if len(args) != 3:
    print('PutJob requires 3 args')
    sys.exit(1)
  pp.pprint(client.PutJob(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'GetStream':
  if len(args) != 3:
    print('GetStream requires 3 args')
    sys.exit(1)
  pp.pprint(client.GetStream(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'AddCityId':
  if len(args) != 3:
    print('AddCityId requires 3 args')
    sys.exit(1)
  pp.pprint(client.AddCityId(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'GetAllCityIds':
  if len(args) != 3:
    print('GetAllCityIds requires 3 args')
    sys.exit(1)
  pp.pprint(client.GetAllCityIds(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'GetComputedCityIds':
  if len(args) != 3:
    print('GetComputedCityIds requires 3 args')
    sys.exit(1)
  pp.pprint(client.GetComputedCityIds(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'GetUnComputeCityIds':
  if len(args) != 3:
    print('GetUnComputeCityIds requires 3 args')
    sys.exit(1)
  pp.pprint(client.GetUnComputeCityIds(eval(args[0]),eval(args[1]),eval(args[2]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
